apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: coffeeshop-prod
data:
  APP_ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  COFFEE_SHOP_NAME: "VCoffee"
  
  # Feature Flags
  ENABLE_PROMOTIONS: "true"
  MAINTENANCE_MODE: "false"
  
  # Resource Limits
  MAX_CONCURRENT_ORDERS: "100"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: coffeeshop-prod
  labels:
    app: postgresql
    sensitive: "false"  # ConfigMaps should never store actual secrets
data:
  # Non-sensitive settings (safe for ConfigMap)
  POSTGRES_DB: "coffeeshop"
  POSTGRES_HOST: "postgresql"
  POSTGRES_PORT: "5432"
  POSTGRES_SSLMODE: "disable "
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: coffeeshop-prod
type: Opaque
stringData:  # Base64 encoding not required for stringData (k8s handles it)
  POSTGRES_USER: "coffee_admin"
  POSTGRES_PASSWORD: "SecurePass123"
  PG_URL: "postgres://coffee_admin:SecurePass123@postgresql:5432/coffeeshop"
  PG_DSN_URL: "host=postgresql user=coffee_admin password=SecurePass123 dbname=coffeeshop sslmode=disable"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: coffeeshop-prod
  labels:
    app: rabbitmq
    sensitive: "false"  # Explicitly mark as non-sensitive
data:
  # Non-sensitive configuration only
  RABBITMQ_HOST: "rabbitmq"
  RABBITMQ_PORT: "5672"
  RABBITMQ_VHOST: "/"
  RABBITMQ_SSL: "true"  # Always enforce SSL/TLS in production
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: coffeeshop-prod
type: Opaque
stringData:
  RABBITMQ_USER: "guest"  # Never use default 'guest'
  RABBITMQ_PASSWORD: "guest"  # Use a generated password
  RABBITMQ_ERLANG_COOKIE: "$(openssl rand -hex 24)"  # Critical for clustering